### YamlMime:ManagedReference
items:
- uid: Gameplay.Questions.Model.FindLineGenerator
  commentId: T:Gameplay.Questions.Model.FindLineGenerator
  id: FindLineGenerator
  parent: Gameplay.Questions.Model
  children:
  - Gameplay.Questions.Model.FindLineGenerator.currentQuestion
  - Gameplay.Questions.Model.FindLineGenerator.GenerateNew
  - Gameplay.Questions.Model.FindLineGenerator.GenerateTip(System.Int32)
  - Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer
  langs:
  - csharp
  - vb
  name: FindLineGenerator
  nameWithType: FindLineGenerator
  fullName: Gameplay.Questions.Model.FindLineGenerator
  type: Class
  source:
    id: FindLineGenerator
    path: ''
    startLine: 4109
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  summary: "\nThis generator generates questions like: Where is that line on the map\n"
  example: []
  syntax:
    content: 'public class FindLineGenerator : QuestionGenerator<UIQuestionFindLine>, ILineQuestion'
    content.vb: >-
      Public Class FindLineGenerator
          Inherits QuestionGenerator(Of UIQuestionFindLine)
          Implements ILineQuestion
  inheritance:
  - System.Object
  - Gameplay.Questions.BaseQuestionGenerator
  - Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  implements:
  - Gameplay.Questions.ILineQuestion
  inheritedMembers:
  - Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.currentRegion
  - Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.blacklistedIds
  - Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.uiController
  - Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
  - Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.SetRegion(Region)
  - Gameplay.Questions.BaseQuestionGenerator.renderer
  - Gameplay.Questions.BaseQuestionGenerator.metro
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gameplay.Questions.Model.FindLineGenerator.currentQuestion
  commentId: F:Gameplay.Questions.Model.FindLineGenerator.currentQuestion
  id: currentQuestion
  parent: Gameplay.Questions.Model.FindLineGenerator
  langs:
  - csharp
  - vb
  name: currentQuestion
  nameWithType: FindLineGenerator.currentQuestion
  fullName: Gameplay.Questions.Model.FindLineGenerator.currentQuestion
  type: Field
  source:
    id: currentQuestion
    path: ''
    startLine: 4111
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public MetroLine currentQuestion
    return:
      type: Global.MetroLine
    content.vb: Public currentQuestion As MetroLine
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gameplay.Questions.Model.FindLineGenerator.GenerateNew
  commentId: M:Gameplay.Questions.Model.FindLineGenerator.GenerateNew
  id: GenerateNew
  parent: Gameplay.Questions.Model.FindLineGenerator
  langs:
  - csharp
  - vb
  name: GenerateNew()
  nameWithType: FindLineGenerator.GenerateNew()
  fullName: Gameplay.Questions.Model.FindLineGenerator.GenerateNew()
  type: Method
  source:
    id: GenerateNew
    path: ''
    startLine: 4113
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public override void GenerateNew()
    content.vb: Public Overrides Sub GenerateNew
  overridden: Gameplay.Questions.BaseQuestionGenerator.GenerateNew
  overload: Gameplay.Questions.Model.FindLineGenerator.GenerateNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Gameplay.Questions.Model.FindLineGenerator.GenerateTip(System.Int32)
  commentId: M:Gameplay.Questions.Model.FindLineGenerator.GenerateTip(System.Int32)
  id: GenerateTip(System.Int32)
  parent: Gameplay.Questions.Model.FindLineGenerator
  langs:
  - csharp
  - vb
  name: GenerateTip(Int32)
  nameWithType: FindLineGenerator.GenerateTip(Int32)
  fullName: Gameplay.Questions.Model.FindLineGenerator.GenerateTip(System.Int32)
  type: Method
  source:
    id: GenerateTip
    path: ''
    startLine: 4130
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public override string GenerateTip(int tipNumber)
    parameters:
    - id: tipNumber
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Overrides Function GenerateTip(tipNumber As Integer) As String
  overridden: Gameplay.Questions.BaseQuestionGenerator.GenerateTip(System.Int32)
  overload: Gameplay.Questions.Model.FindLineGenerator.GenerateTip*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer
  commentId: M:Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer
  id: ValidateAnswer
  parent: Gameplay.Questions.Model.FindLineGenerator
  langs:
  - csharp
  - vb
  name: ValidateAnswer()
  nameWithType: FindLineGenerator.ValidateAnswer()
  fullName: Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer()
  type: Method
  source:
    id: ValidateAnswer
    path: ''
    startLine: 4144
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public override bool ValidateAnswer()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ValidateAnswer As Boolean
  overridden: Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer
  overload: Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Gameplay.Questions.Model
  commentId: N:Gameplay.Questions.Model
  name: Gameplay.Questions.Model
  nameWithType: Gameplay.Questions.Model
  fullName: Gameplay.Questions.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Gameplay.Questions.BaseQuestionGenerator
  commentId: T:Gameplay.Questions.BaseQuestionGenerator
  parent: Gameplay.Questions
  name: BaseQuestionGenerator
  nameWithType: BaseQuestionGenerator
  fullName: Gameplay.Questions.BaseQuestionGenerator
- uid: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  commentId: T:Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  parent: Gameplay.Questions
  definition: Gameplay.Questions.QuestionGenerator`1
  name: QuestionGenerator<UIQuestionFindLine>
  nameWithType: QuestionGenerator<UIQuestionFindLine>
  fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>
  nameWithType.vb: QuestionGenerator(Of UIQuestionFindLine)
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine)
  name.vb: QuestionGenerator(Of UIQuestionFindLine)
  spec.csharp:
  - uid: Gameplay.Questions.QuestionGenerator`1
    name: QuestionGenerator
    nameWithType: QuestionGenerator
    fullName: Gameplay.Questions.QuestionGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gameplay.Questions.Model.UIQuestionFindLine
    name: UIQuestionFindLine
    nameWithType: UIQuestionFindLine
    fullName: Gameplay.Questions.Model.UIQuestionFindLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Gameplay.Questions.QuestionGenerator`1
    name: QuestionGenerator
    nameWithType: QuestionGenerator
    fullName: Gameplay.Questions.QuestionGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gameplay.Questions.Model.UIQuestionFindLine
    name: UIQuestionFindLine
    nameWithType: UIQuestionFindLine
    fullName: Gameplay.Questions.Model.UIQuestionFindLine
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.ILineQuestion
  commentId: T:Gameplay.Questions.ILineQuestion
  parent: Gameplay.Questions
  name: ILineQuestion
  nameWithType: ILineQuestion
  fullName: Gameplay.Questions.ILineQuestion
- uid: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.currentRegion
  commentId: F:Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.currentRegion
  parent: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  definition: Gameplay.Questions.QuestionGenerator`1.currentRegion
  name: currentRegion
  nameWithType: QuestionGenerator<UIQuestionFindLine>.currentRegion
  fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>.currentRegion
  nameWithType.vb: QuestionGenerator(Of UIQuestionFindLine).currentRegion
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine).currentRegion
- uid: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.blacklistedIds
  commentId: F:Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.blacklistedIds
  parent: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  definition: Gameplay.Questions.QuestionGenerator`1.blacklistedIds
  name: blacklistedIds
  nameWithType: QuestionGenerator<UIQuestionFindLine>.blacklistedIds
  fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>.blacklistedIds
  nameWithType.vb: QuestionGenerator(Of UIQuestionFindLine).blacklistedIds
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine).blacklistedIds
- uid: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.uiController
  commentId: F:Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.uiController
  parent: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  definition: Gameplay.Questions.QuestionGenerator`1.uiController
  name: uiController
  nameWithType: QuestionGenerator<UIQuestionFindLine>.uiController
  fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>.uiController
  nameWithType.vb: QuestionGenerator(Of UIQuestionFindLine).uiController
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine).uiController
- uid: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
  commentId: M:Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
  parent: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  definition: Gameplay.Questions.QuestionGenerator`1.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
  name: Init(MetroRenderer, BaseUIQuestion)
  nameWithType: QuestionGenerator<UIQuestionFindLine>.Init(MetroRenderer, BaseUIQuestion)
  fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>.Init(MetroRenderer, Gameplay.Questions.BaseUIQuestion)
  nameWithType.vb: QuestionGenerator(Of UIQuestionFindLine).Init(MetroRenderer, BaseUIQuestion)
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine).Init(MetroRenderer, Gameplay.Questions.BaseUIQuestion)
  spec.csharp:
  - uid: Gameplay.Questions.QuestionGenerator`1.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
    name: Init
    nameWithType: QuestionGenerator<UIQuestionFindLine>.Init
    fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.MetroRenderer
    name: MetroRenderer
    nameWithType: MetroRenderer
    fullName: MetroRenderer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gameplay.Questions.BaseUIQuestion
    name: BaseUIQuestion
    nameWithType: BaseUIQuestion
    fullName: Gameplay.Questions.BaseUIQuestion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.QuestionGenerator`1.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
    name: Init
    nameWithType: QuestionGenerator(Of UIQuestionFindLine).Init
    fullName: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.MetroRenderer
    name: MetroRenderer
    nameWithType: MetroRenderer
    fullName: MetroRenderer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gameplay.Questions.BaseUIQuestion
    name: BaseUIQuestion
    nameWithType: BaseUIQuestion
    fullName: Gameplay.Questions.BaseUIQuestion
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.SetRegion(Region)
  commentId: M:Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}.SetRegion(Region)
  parent: Gameplay.Questions.QuestionGenerator{Gameplay.Questions.Model.UIQuestionFindLine}
  definition: Gameplay.Questions.QuestionGenerator`1.SetRegion(Region)
  name: SetRegion(Region)
  nameWithType: QuestionGenerator<UIQuestionFindLine>.SetRegion(Region)
  fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>.SetRegion(Region)
  nameWithType.vb: QuestionGenerator(Of UIQuestionFindLine).SetRegion(Region)
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine).SetRegion(Region)
  spec.csharp:
  - uid: Gameplay.Questions.QuestionGenerator`1.SetRegion(Region)
    name: SetRegion
    nameWithType: QuestionGenerator<UIQuestionFindLine>.SetRegion
    fullName: Gameplay.Questions.QuestionGenerator<Gameplay.Questions.Model.UIQuestionFindLine>.SetRegion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.Region
    name: Region
    nameWithType: Region
    fullName: Region
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.QuestionGenerator`1.SetRegion(Region)
    name: SetRegion
    nameWithType: QuestionGenerator(Of UIQuestionFindLine).SetRegion
    fullName: Gameplay.Questions.QuestionGenerator(Of Gameplay.Questions.Model.UIQuestionFindLine).SetRegion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.Region
    name: Region
    nameWithType: Region
    fullName: Region
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.BaseQuestionGenerator.renderer
  commentId: F:Gameplay.Questions.BaseQuestionGenerator.renderer
  parent: Gameplay.Questions.BaseQuestionGenerator
  name: renderer
  nameWithType: BaseQuestionGenerator.renderer
  fullName: Gameplay.Questions.BaseQuestionGenerator.renderer
- uid: Gameplay.Questions.BaseQuestionGenerator.metro
  commentId: F:Gameplay.Questions.BaseQuestionGenerator.metro
  parent: Gameplay.Questions.BaseQuestionGenerator
  name: metro
  nameWithType: BaseQuestionGenerator.metro
  fullName: Gameplay.Questions.BaseQuestionGenerator.metro
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Gameplay.Questions
  commentId: N:Gameplay.Questions
  name: Gameplay.Questions
  nameWithType: Gameplay.Questions
  fullName: Gameplay.Questions
- uid: Gameplay.Questions.QuestionGenerator`1
  commentId: T:Gameplay.Questions.QuestionGenerator`1
  name: QuestionGenerator<T>
  nameWithType: QuestionGenerator<T>
  fullName: Gameplay.Questions.QuestionGenerator<T>
  nameWithType.vb: QuestionGenerator(Of T)
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of T)
  name.vb: QuestionGenerator(Of T)
  spec.csharp:
  - uid: Gameplay.Questions.QuestionGenerator`1
    name: QuestionGenerator
    nameWithType: QuestionGenerator
    fullName: Gameplay.Questions.QuestionGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Gameplay.Questions.QuestionGenerator`1
    name: QuestionGenerator
    nameWithType: QuestionGenerator
    fullName: Gameplay.Questions.QuestionGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.QuestionGenerator`1.currentRegion
  commentId: F:Gameplay.Questions.QuestionGenerator`1.currentRegion
  name: currentRegion
  nameWithType: QuestionGenerator<T>.currentRegion
  fullName: Gameplay.Questions.QuestionGenerator<T>.currentRegion
  nameWithType.vb: QuestionGenerator(Of T).currentRegion
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of T).currentRegion
- uid: Gameplay.Questions.QuestionGenerator`1.blacklistedIds
  commentId: F:Gameplay.Questions.QuestionGenerator`1.blacklistedIds
  name: blacklistedIds
  nameWithType: QuestionGenerator<T>.blacklistedIds
  fullName: Gameplay.Questions.QuestionGenerator<T>.blacklistedIds
  nameWithType.vb: QuestionGenerator(Of T).blacklistedIds
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of T).blacklistedIds
- uid: Gameplay.Questions.QuestionGenerator`1.uiController
  commentId: F:Gameplay.Questions.QuestionGenerator`1.uiController
  name: uiController
  nameWithType: QuestionGenerator<T>.uiController
  fullName: Gameplay.Questions.QuestionGenerator<T>.uiController
  nameWithType.vb: QuestionGenerator(Of T).uiController
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of T).uiController
- uid: Gameplay.Questions.QuestionGenerator`1.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
  commentId: M:Gameplay.Questions.QuestionGenerator`1.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
  isExternal: true
  name: Init(MetroRenderer, BaseUIQuestion)
  nameWithType: QuestionGenerator<T>.Init(MetroRenderer, BaseUIQuestion)
  fullName: Gameplay.Questions.QuestionGenerator<T>.Init(MetroRenderer, Gameplay.Questions.BaseUIQuestion)
  nameWithType.vb: QuestionGenerator(Of T).Init(MetroRenderer, BaseUIQuestion)
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of T).Init(MetroRenderer, Gameplay.Questions.BaseUIQuestion)
  spec.csharp:
  - uid: Gameplay.Questions.QuestionGenerator`1.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
    name: Init
    nameWithType: QuestionGenerator<T>.Init
    fullName: Gameplay.Questions.QuestionGenerator<T>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.MetroRenderer
    name: MetroRenderer
    nameWithType: MetroRenderer
    fullName: MetroRenderer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gameplay.Questions.BaseUIQuestion
    name: BaseUIQuestion
    nameWithType: BaseUIQuestion
    fullName: Gameplay.Questions.BaseUIQuestion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.QuestionGenerator`1.Init(MetroRenderer,Gameplay.Questions.BaseUIQuestion)
    name: Init
    nameWithType: QuestionGenerator(Of T).Init
    fullName: Gameplay.Questions.QuestionGenerator(Of T).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.MetroRenderer
    name: MetroRenderer
    nameWithType: MetroRenderer
    fullName: MetroRenderer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gameplay.Questions.BaseUIQuestion
    name: BaseUIQuestion
    nameWithType: BaseUIQuestion
    fullName: Gameplay.Questions.BaseUIQuestion
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.QuestionGenerator`1.SetRegion(Region)
  commentId: M:Gameplay.Questions.QuestionGenerator`1.SetRegion(Region)
  isExternal: true
  name: SetRegion(Region)
  nameWithType: QuestionGenerator<T>.SetRegion(Region)
  fullName: Gameplay.Questions.QuestionGenerator<T>.SetRegion(Region)
  nameWithType.vb: QuestionGenerator(Of T).SetRegion(Region)
  fullName.vb: Gameplay.Questions.QuestionGenerator(Of T).SetRegion(Region)
  spec.csharp:
  - uid: Gameplay.Questions.QuestionGenerator`1.SetRegion(Region)
    name: SetRegion
    nameWithType: QuestionGenerator<T>.SetRegion
    fullName: Gameplay.Questions.QuestionGenerator<T>.SetRegion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.Region
    name: Region
    nameWithType: Region
    fullName: Region
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.QuestionGenerator`1.SetRegion(Region)
    name: SetRegion
    nameWithType: QuestionGenerator(Of T).SetRegion
    fullName: Gameplay.Questions.QuestionGenerator(Of T).SetRegion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.Region
    name: Region
    nameWithType: Region
    fullName: Region
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.MetroLine
  isExternal: true
  name: MetroLine
  nameWithType: MetroLine
  fullName: MetroLine
- uid: Gameplay.Questions.BaseQuestionGenerator.GenerateNew
  commentId: M:Gameplay.Questions.BaseQuestionGenerator.GenerateNew
  parent: Gameplay.Questions.BaseQuestionGenerator
  name: GenerateNew()
  nameWithType: BaseQuestionGenerator.GenerateNew()
  fullName: Gameplay.Questions.BaseQuestionGenerator.GenerateNew()
  spec.csharp:
  - uid: Gameplay.Questions.BaseQuestionGenerator.GenerateNew
    name: GenerateNew
    nameWithType: BaseQuestionGenerator.GenerateNew
    fullName: Gameplay.Questions.BaseQuestionGenerator.GenerateNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.BaseQuestionGenerator.GenerateNew
    name: GenerateNew
    nameWithType: BaseQuestionGenerator.GenerateNew
    fullName: Gameplay.Questions.BaseQuestionGenerator.GenerateNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.Model.FindLineGenerator.GenerateNew*
  commentId: Overload:Gameplay.Questions.Model.FindLineGenerator.GenerateNew
  name: GenerateNew
  nameWithType: FindLineGenerator.GenerateNew
  fullName: Gameplay.Questions.Model.FindLineGenerator.GenerateNew
- uid: Gameplay.Questions.BaseQuestionGenerator.GenerateTip(System.Int32)
  commentId: M:Gameplay.Questions.BaseQuestionGenerator.GenerateTip(System.Int32)
  parent: Gameplay.Questions.BaseQuestionGenerator
  isExternal: true
  name: GenerateTip(Int32)
  nameWithType: BaseQuestionGenerator.GenerateTip(Int32)
  fullName: Gameplay.Questions.BaseQuestionGenerator.GenerateTip(System.Int32)
  spec.csharp:
  - uid: Gameplay.Questions.BaseQuestionGenerator.GenerateTip(System.Int32)
    name: GenerateTip
    nameWithType: BaseQuestionGenerator.GenerateTip
    fullName: Gameplay.Questions.BaseQuestionGenerator.GenerateTip
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.BaseQuestionGenerator.GenerateTip(System.Int32)
    name: GenerateTip
    nameWithType: BaseQuestionGenerator.GenerateTip
    fullName: Gameplay.Questions.BaseQuestionGenerator.GenerateTip
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.Model.FindLineGenerator.GenerateTip*
  commentId: Overload:Gameplay.Questions.Model.FindLineGenerator.GenerateTip
  name: GenerateTip
  nameWithType: FindLineGenerator.GenerateTip
  fullName: Gameplay.Questions.Model.FindLineGenerator.GenerateTip
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer
  commentId: M:Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer
  parent: Gameplay.Questions.BaseQuestionGenerator
  name: ValidateAnswer()
  nameWithType: BaseQuestionGenerator.ValidateAnswer()
  fullName: Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer()
  spec.csharp:
  - uid: Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer
    name: ValidateAnswer
    nameWithType: BaseQuestionGenerator.ValidateAnswer
    fullName: Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer
    name: ValidateAnswer
    nameWithType: BaseQuestionGenerator.ValidateAnswer
    fullName: Gameplay.Questions.BaseQuestionGenerator.ValidateAnswer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer*
  commentId: Overload:Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer
  name: ValidateAnswer
  nameWithType: FindLineGenerator.ValidateAnswer
  fullName: Gameplay.Questions.Model.FindLineGenerator.ValidateAnswer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
