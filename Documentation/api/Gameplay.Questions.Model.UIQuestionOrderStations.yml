### YamlMime:ManagedReference
items:
- uid: Gameplay.Questions.Model.UIQuestionOrderStations
  commentId: T:Gameplay.Questions.Model.UIQuestionOrderStations
  id: UIQuestionOrderStations
  parent: Gameplay.Questions.Model
  children:
  - Gameplay.Questions.Model.UIQuestionOrderStations.buttons
  - Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection
  - Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult(List{System.Boolean},System.Boolean)
  - Gameplay.Questions.Model.UIQuestionOrderStations.GetController
  - Gameplay.Questions.Model.UIQuestionOrderStations.HideElements
  - Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged
  - Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion(List{MetroStation})
  - Gameplay.Questions.Model.UIQuestionOrderStations.tmpLabelTransform
  langs:
  - csharp
  - vb
  name: UIQuestionOrderStations
  nameWithType: UIQuestionOrderStations
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations
  type: Class
  source:
    id: UIQuestionOrderStations
    path: ''
    startLine: 4398
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  summary: "\nUI for <xref href=\"Gameplay.Questions.Model.OrderStationsGenerator\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class UIQuestionOrderStations : BaseUIQuestion'
    content.vb: >-
      Public Class UIQuestionOrderStations
          Inherits BaseUIQuestion
  inheritance:
  - System.Object
  - Gameplay.Questions.BaseUIQuestion
  inheritedMembers:
  - Gameplay.Questions.BaseUIQuestion.renderer
  - Gameplay.Questions.BaseUIQuestion.bottomPane
  - Gameplay.Questions.BaseUIQuestion.questionLabel
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.buttons
  commentId: F:Gameplay.Questions.Model.UIQuestionOrderStations.buttons
  id: buttons
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: buttons
  nameWithType: UIQuestionOrderStations.buttons
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.buttons
  type: Field
  source:
    id: buttons
    path: ''
    startLine: 4400
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public UIDraggableButtonList buttons
    return:
      type: Global.UIDraggableButtonList
    content.vb: Public buttons As UIDraggableButtonList
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.tmpLabelTransform
  commentId: F:Gameplay.Questions.Model.UIQuestionOrderStations.tmpLabelTransform
  id: tmpLabelTransform
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: tmpLabelTransform
  nameWithType: UIQuestionOrderStations.tmpLabelTransform
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.tmpLabelTransform
  type: Field
  source:
    id: tmpLabelTransform
    path: ''
    startLine: 4403
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public Transform tmpLabelTransform
    return:
      type: Global.Transform
    content.vb: Public tmpLabelTransform As Transform
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.GetController
  commentId: M:Gameplay.Questions.Model.UIQuestionOrderStations.GetController
  id: GetController
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: GetController()
  nameWithType: UIQuestionOrderStations.GetController()
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.GetController()
  type: Method
  source:
    id: GetController
    path: ''
    startLine: 4405
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public override BaseQuestionGenerator GetController()
    return:
      type: Gameplay.Questions.BaseQuestionGenerator
    content.vb: Public Overrides Function GetController As BaseQuestionGenerator
  overridden: Gameplay.Questions.BaseUIQuestion.GetController
  overload: Gameplay.Questions.Model.UIQuestionOrderStations.GetController*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.HideElements
  commentId: M:Gameplay.Questions.Model.UIQuestionOrderStations.HideElements
  id: HideElements
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: HideElements()
  nameWithType: UIQuestionOrderStations.HideElements()
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.HideElements()
  type: Method
  source:
    id: HideElements
    path: ''
    startLine: 4410
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public override void HideElements()
    content.vb: Public Overrides Sub HideElements
  overridden: Gameplay.Questions.BaseUIQuestion.HideElements
  overload: Gameplay.Questions.Model.UIQuestionOrderStations.HideElements*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged
  commentId: M:Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged
  id: OnOrderChanged
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: OnOrderChanged()
  nameWithType: UIQuestionOrderStations.OnOrderChanged()
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged()
  type: Method
  source:
    id: OnOrderChanged
    path: ''
    startLine: 4421
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public void OnOrderChanged()
    content.vb: Public Sub OnOrderChanged
  overload: Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion(List{MetroStation})
  commentId: M:Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion(List{MetroStation})
  id: SetQuestion(List{MetroStation})
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: SetQuestion(List<MetroStation>)
  nameWithType: UIQuestionOrderStations.SetQuestion(List<MetroStation>)
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion(List<MetroStation>)
  type: Method
  source:
    id: SetQuestion
    path: ''
    startLine: 4431
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public void SetQuestion(List<MetroStation> stations)
    parameters:
    - id: stations
      type: Global.List{MetroStation}
    content.vb: Public Sub SetQuestion(stations As List(Of MetroStation))
  overload: Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion*
  nameWithType.vb: UIQuestionOrderStations.SetQuestion(List(Of MetroStation))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion(List(Of MetroStation))
  name.vb: SetQuestion(List(Of MetroStation))
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection
  commentId: M:Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection
  id: CurrentSelection
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: CurrentSelection()
  nameWithType: UIQuestionOrderStations.CurrentSelection()
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection()
  type: Method
  source:
    id: CurrentSelection
    path: ''
    startLine: 4455
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public List<MetroStation> CurrentSelection()
    return:
      type: Global.List{MetroStation}
    content.vb: Public Function CurrentSelection As List(Of MetroStation)
  overload: Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult(List{System.Boolean},System.Boolean)
  commentId: M:Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult(List{System.Boolean},System.Boolean)
  id: DisplayResult(List{System.Boolean},System.Boolean)
  parent: Gameplay.Questions.Model.UIQuestionOrderStations
  langs:
  - csharp
  - vb
  name: DisplayResult(List<Boolean>, Boolean)
  nameWithType: UIQuestionOrderStations.DisplayResult(List<Boolean>, Boolean)
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult(List<System.Boolean>, System.Boolean)
  type: Method
  source:
    id: DisplayResult
    path: ''
    startLine: 4460
  assemblies:
  - cs.temp.dll
  namespace: Gameplay.Questions.Model
  syntax:
    content: public void DisplayResult(List<bool> result, bool allCorrect)
    parameters:
    - id: result
      type: Global.List{System.Boolean}
    - id: allCorrect
      type: System.Boolean
    content.vb: Public Sub DisplayResult(result As List(Of Boolean), allCorrect As Boolean)
  overload: Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult*
  nameWithType.vb: UIQuestionOrderStations.DisplayResult(List(Of Boolean), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult(List(Of System.Boolean), System.Boolean)
  name.vb: DisplayResult(List(Of Boolean), Boolean)
references:
- uid: Gameplay.Questions.Model.OrderStationsGenerator
  commentId: T:Gameplay.Questions.Model.OrderStationsGenerator
  name: OrderStationsGenerator
  nameWithType: OrderStationsGenerator
  fullName: Gameplay.Questions.Model.OrderStationsGenerator
- uid: Gameplay.Questions.Model
  commentId: N:Gameplay.Questions.Model
  name: Gameplay.Questions.Model
  nameWithType: Gameplay.Questions.Model
  fullName: Gameplay.Questions.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Gameplay.Questions.BaseUIQuestion
  commentId: T:Gameplay.Questions.BaseUIQuestion
  parent: Gameplay.Questions
  name: BaseUIQuestion
  nameWithType: BaseUIQuestion
  fullName: Gameplay.Questions.BaseUIQuestion
- uid: Gameplay.Questions.BaseUIQuestion.renderer
  commentId: F:Gameplay.Questions.BaseUIQuestion.renderer
  parent: Gameplay.Questions.BaseUIQuestion
  name: renderer
  nameWithType: BaseUIQuestion.renderer
  fullName: Gameplay.Questions.BaseUIQuestion.renderer
- uid: Gameplay.Questions.BaseUIQuestion.bottomPane
  commentId: F:Gameplay.Questions.BaseUIQuestion.bottomPane
  parent: Gameplay.Questions.BaseUIQuestion
  name: bottomPane
  nameWithType: BaseUIQuestion.bottomPane
  fullName: Gameplay.Questions.BaseUIQuestion.bottomPane
- uid: Gameplay.Questions.BaseUIQuestion.questionLabel
  commentId: F:Gameplay.Questions.BaseUIQuestion.questionLabel
  parent: Gameplay.Questions.BaseUIQuestion
  name: questionLabel
  nameWithType: BaseUIQuestion.questionLabel
  fullName: Gameplay.Questions.BaseUIQuestion.questionLabel
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Gameplay.Questions
  commentId: N:Gameplay.Questions
  name: Gameplay.Questions
  nameWithType: Gameplay.Questions
  fullName: Gameplay.Questions
- uid: Global.UIDraggableButtonList
  commentId: '!:Global.UIDraggableButtonList'
  isExternal: true
  name: UIDraggableButtonList
  nameWithType: UIDraggableButtonList
  fullName: UIDraggableButtonList
- uid: Global.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: Gameplay.Questions.BaseUIQuestion.GetController
  commentId: M:Gameplay.Questions.BaseUIQuestion.GetController
  parent: Gameplay.Questions.BaseUIQuestion
  name: GetController()
  nameWithType: BaseUIQuestion.GetController()
  fullName: Gameplay.Questions.BaseUIQuestion.GetController()
  spec.csharp:
  - uid: Gameplay.Questions.BaseUIQuestion.GetController
    name: GetController
    nameWithType: BaseUIQuestion.GetController
    fullName: Gameplay.Questions.BaseUIQuestion.GetController
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.BaseUIQuestion.GetController
    name: GetController
    nameWithType: BaseUIQuestion.GetController
    fullName: Gameplay.Questions.BaseUIQuestion.GetController
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.GetController*
  commentId: Overload:Gameplay.Questions.Model.UIQuestionOrderStations.GetController
  name: GetController
  nameWithType: UIQuestionOrderStations.GetController
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.GetController
- uid: Gameplay.Questions.BaseQuestionGenerator
  commentId: T:Gameplay.Questions.BaseQuestionGenerator
  parent: Gameplay.Questions
  name: BaseQuestionGenerator
  nameWithType: BaseQuestionGenerator
  fullName: Gameplay.Questions.BaseQuestionGenerator
- uid: Gameplay.Questions.BaseUIQuestion.HideElements
  commentId: M:Gameplay.Questions.BaseUIQuestion.HideElements
  parent: Gameplay.Questions.BaseUIQuestion
  name: HideElements()
  nameWithType: BaseUIQuestion.HideElements()
  fullName: Gameplay.Questions.BaseUIQuestion.HideElements()
  spec.csharp:
  - uid: Gameplay.Questions.BaseUIQuestion.HideElements
    name: HideElements
    nameWithType: BaseUIQuestion.HideElements
    fullName: Gameplay.Questions.BaseUIQuestion.HideElements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gameplay.Questions.BaseUIQuestion.HideElements
    name: HideElements
    nameWithType: BaseUIQuestion.HideElements
    fullName: Gameplay.Questions.BaseUIQuestion.HideElements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.HideElements*
  commentId: Overload:Gameplay.Questions.Model.UIQuestionOrderStations.HideElements
  name: HideElements
  nameWithType: UIQuestionOrderStations.HideElements
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.HideElements
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged*
  commentId: Overload:Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged
  name: OnOrderChanged
  nameWithType: UIQuestionOrderStations.OnOrderChanged
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.OnOrderChanged
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion*
  commentId: Overload:Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion
  name: SetQuestion
  nameWithType: UIQuestionOrderStations.SetQuestion
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.SetQuestion
- uid: Global.List{MetroStation}
  commentId: '!:Global.List{MetroStation}'
  definition: Global.List`1
  name: List<MetroStation>
  nameWithType: List<MetroStation>
  fullName: List<MetroStation>
  nameWithType.vb: List(Of MetroStation)
  fullName.vb: List(Of MetroStation)
  name.vb: List(Of MetroStation)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.MetroStation
    name: MetroStation
    nameWithType: MetroStation
    fullName: MetroStation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.MetroStation
    name: MetroStation
    nameWithType: MetroStation
    fullName: MetroStation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection*
  commentId: Overload:Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection
  name: CurrentSelection
  nameWithType: UIQuestionOrderStations.CurrentSelection
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.CurrentSelection
- uid: Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult*
  commentId: Overload:Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult
  name: DisplayResult
  nameWithType: UIQuestionOrderStations.DisplayResult
  fullName: Gameplay.Questions.Model.UIQuestionOrderStations.DisplayResult
- uid: Global.List{System.Boolean}
  commentId: '!:Global.List{System.Boolean}'
  definition: Global.List`1
  name: List<Boolean>
  nameWithType: List<Boolean>
  fullName: List<System.Boolean>
  nameWithType.vb: List(Of Boolean)
  fullName.vb: List(Of System.Boolean)
  name.vb: List(Of Boolean)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
